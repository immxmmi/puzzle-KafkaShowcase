apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: mykafka-cluster  # Name of the Kafka cluster
  namespace: kafka  # Namespace where Kafka will be deployed
spec:
  cruiseControl:
    config:
      webserver.ssl.enable: false  # Disable SSL for the Cruise Control web server
      webserver.security.enable: false  # Disable authentication for the Cruise Control web server
      security.protocol: PLAINTEXT  # Use plain text communication (no encryption)
      ssl.client.auth: none  # No client authentication required

  entityOperator:
    topicOperator: {}  # Enable the Topic Operator for automatic topic management

  kafka:
    storage:
      type: ephemeral  # Ephemeral storage (data will be lost on pod restart)

    listeners:
      - name: internal  # Internal listener for Kafka clients within the cluster
        port: 9092  # Kafka broker port
        tls: false  # Disable TLS encryption
        type: internal  # Internal type means only accessible within the Kubernetes cluster

    config:
      auto.create.topics.enable: false  # Prevent automatic topic creation (recommended for production)
      default.replication.factor: 2  # Default replication factor for new topics
      delete.topic.enable: false  # Disable topic deletion to prevent accidental data loss
      min.insync.replicas: 2  # Minimum number of replicas that must be in sync to acknowledge writes
      process.roles: broker
      node.id: 0
      controller.quorum.voters: 0@mykafka-cluster-kafka-0.mykafka-cluster-kafka-bootstrap.kafka.svc:9093
      offsets.topic.replication.factor: 1  # Required for clusters with less than 3 brokers to avoid coordinator errors
      transaction.state.log.replication.factor: 1  # Ensures transaction logs can be created in small clusters
      transaction.state.log.min.isr: 1  # Minimum in-sync replicas for transaction logs in small clusters

---

apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaNodePool
metadata:
  name: pool-one
  namespace: kafka
  labels:
    strimzi.io/cluster: mykafka-cluster
spec:
  replicas: 2  # Number of Kafka broker instances in this pool
  roles:
    - broker  # Define this pool as a broker node
  storage:
    type: ephemeral  # Ephemeral storage (data will be lost on pod restart)